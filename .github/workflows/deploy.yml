name: Deploy Documentation

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job for Jekyll (main docs site)
  build-jekyll:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build Jekyll site
        run: |
          # Create Gemfile if it doesn't exist
          if [ ! -f Gemfile ]; then
            cat > Gemfile << EOF
          source "https://rubygems.org"
          gem "jekyll", "~> 4.3.0"
          gem "jekyll-seo-tag"
          gem "jekyll-sitemap"
          EOF
          fi
          
          bundle install
          bundle exec jekyll build --destination ./_site
        env:
          JEKYLL_ENV: production

      - name: Upload Jekyll artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: jekyll-site
          path: ./_site

  # Build job for MkDocs (CTO Playbook)
  build-mkdocs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install MkDocs and dependencies
        run: |
          pip install mkdocs-material mkdocs-autorefs

      - name: Build MkDocs site
        run: |
          mkdocs build --site-dir ./site/cto-playbook

      - name: Upload MkDocs artifact
        uses: actions/upload-artifact@v4
        with:
          name: mkdocs-site
          path: ./site/cto-playbook

  # Deploy job - combines both sites
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [build-jekyll, build-mkdocs]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download Jekyll artifact
        uses: actions/download-artifact@v4
        with:
          name: jekyll-site
          path: ./combined-site

      - name: Download MkDocs artifact
        uses: actions/download-artifact@v4
        with:
          name: mkdocs-site
          path: ./mkdocs-content

      - name: Combine sites
        run: |
          # Copy MkDocs content to Jekyll site under /cto-playbook/
          mkdir -p ./combined-site/cto-playbook
          cp -r ./mkdocs-content/* ./combined-site/cto-playbook/
          
          # Create placeholder PDF directory
          mkdir -p ./combined-site/assets/pdf
          
          # Create placeholder PDF files (empty files for now)
          touch ./combined-site/assets/pdf/cto-executive-brief.pdf
          touch ./combined-site/assets/pdf/stakeholder-presentation.pdf
          touch ./combined-site/assets/pdf/roi-calculator.xlsx
          touch ./combined-site/assets/pdf/cost-comparison.pdf
          touch ./combined-site/assets/pdf/implementation-checklist.pdf
          touch ./combined-site/assets/pdf/integration-architecture.pdf
          touch ./combined-site/assets/pdf/security-framework.pdf
          touch ./combined-site/assets/pdf/hiring-workflow.pdf
          touch ./combined-site/assets/pdf/performance-templates.pdf
          touch ./combined-site/assets/pdf/metrics-dashboard.xlsx
          touch ./combined-site/assets/pdf/executive-reporting.pdf
          touch ./combined-site/assets/pdf/industry-benchmarks.pdf
          touch ./combined-site/assets/pdf/series-a-case-study.pdf
          touch ./combined-site/assets/pdf/enterprise-case-study.pdf
          touch ./combined-site/assets/pdf/common-pitfalls.pdf
          touch ./combined-site/assets/pdf/msa-template.pdf
          touch ./combined-site/assets/pdf/dpa-template.pdf
          touch ./combined-site/assets/pdf/soc2-checklist.pdf
          touch ./combined-site/assets/pdf/hipaa-guide.pdf

      - name: Upload combined site
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./combined-site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Preview job for pull requests
  preview:
    runs-on: ubuntu-latest
    needs: [build-jekyll, build-mkdocs]
    if: github.event_name == 'pull_request'
    steps:
      - name: Download Jekyll artifact
        uses: actions/download-artifact@v4
        with:
          name: jekyll-site
          path: ./preview-site

      - name: Download MkDocs artifact
        uses: actions/download-artifact@v4
        with:
          name: mkdocs-site
          path: ./mkdocs-content

      - name: Combine preview sites
        run: |
          mkdir -p ./preview-site/cto-playbook
          cp -r ./mkdocs-content/* ./preview-site/cto-playbook/

      - name: Comment PR with preview
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '## ðŸ“– Documentation Preview\n\nYour changes have been built successfully!\n\n- **Main docs**: Available in GitHub Pages preview\n- **CTO Playbook**: MkDocs content integrated\n- **PDF placeholders**: Created for all referenced documents\n\nThe preview will be available once this PR is merged.'
            });